1. controller

package com.kafka.Springbootkafkatutorial.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kafka.Springbootkafkatutorial.kafka.JsonKafkaProducer;
import com.kafka.Springbootkafkatutorial.model.User;

@RestController
@RequestMapping("/api/v1/kafka")
public class JsonMessageController {

	private JsonKafkaProducer kafkaProducer;
	
	public JsonMessageController(JsonKafkaProducer kafkaProducer) {
		this.kafkaProducer = kafkaProducer;
	}
	
	@PostMapping("/publish")
	public ResponseEntity<String> publish(@RequestBody User user){
		kafkaProducer.sendMessage(user);
		return ResponseEntity.ok("JSON Message sent to kafka topic");
	}
}


2.POSTMAN

http://localhost:8080/api/v1/kafka/publish
{
    "id":1,
    "firstName":"niladri",
    "lastName":"bit"

}

3.Verify

.\bin\windows\kafka-console-consumer.bat --topic javaguides --from-beginning --bootstrap-server localhost:9092

4.to avoid exception create separte topic as consumer consumes string but here we are passing json so it needs to be in separate topic

4.1KAFKATOPICCONFIG

 @Bean
    public NewTopic javaguidesJSONTopic(){
        return TopicBuilder.name("javaguides_json")
                .build();
    }

4.2JSONKAFKAPRODUCER

public void sendMessage(User data) {
		
		LOGGER.info(String.format("Message sent - > %s",data.toString()));
		Message<User> message = MessageBuilder.withPayload(data)
				.setHeader(KafkaHeaders.TOPIC, "javaguides_json").build();
		
		kafkaTemplate.send(message);
		
	}

4.3 VERIFY

.\bin\windows\kafka-console-consumer.bat --topic javaguides_json --from-beginning --bootstrap-server localhost:9092
